{"mappings":"oeAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,S,aCAAE,EAAAF,EAAA,S,IA2BAG,EAxBA,SAA4BC,GACxB,MAAMC,EAASD,EAAIE,KAAI,EAACC,YAAEA,EAAWC,MAAEA,EAAKC,aAAEA,MAAmB,mHAEfF,WAAqBC,4EAChCA,4GAWxBE,EATiDD,EAUnDC,EAAMC,MAAM,IAAIC,MAAM,EAAG,GAAGC,KAAK,2CADlD,IAAmBH,CANd,IAAEG,KAAK,IAERX,EAAAY,QAAKC,WAAWC,UAAYX,C,EDVhC,MAAMY,EAAW,IAAI,EAAAhB,EAAAa,SAIrB,SAASI,EAAaC,GAClBA,EAAEC,iBACF,MAAMC,EAAkBnB,EAAAY,QAAKQ,UAAUZ,MAAMa,OAC7CN,EAASO,WAAaH,EAEtBnB,EAAAY,QAAKC,WAAWC,UAAY,GAE5BC,EAASQ,kBAAkBC,MAAKC,IACvBA,EAAKC,QAAQC,QAGlB1B,EAAmBwB,EAAKC,QAAQ,IAElCE,OAAMC,GAAOC,QAAQC,IAAIF,I,CAf/B7B,EAAAY,QAAKoB,KAAKC,iBAAiB,SAAUjB,G,uBENrChB,EAAAF,EAAA,UAEAc,QAAKsB,YAAYD,iBAAiB,SAE3B,WACUE,SAASC,KACjBC,UAAUC,OAAO,O,ICN1BtC,EAAAF,EAAA,S,wBCAAA,EAAA,S,aAKO,SAASyC,GAAkBlC,YAAEA,EAAWC,MAAEA,EAAKkC,aAAEA,EAAYC,WAAEA,EAAUC,WAAEA,EAAUC,SAAEA,IAC5F,MAAMxC,EAAS,4FAG4BE,kBAChCC,2KAOkBA,8XAUSkC,EAAaI,QAAQ,QAAQH,iDAC7BC,iDACApC,+LAQhCqC,4CAMN3C,EAAAY,QAAKiC,WAAWC,mBAAmB,YAAa3C,E,kBDnClD,MAAM4C,EAAU,IAAI,EAAAhD,EAAAa,SACdoC,EAAoB,IAAI,EAAAC,EAAAC,0BAC9B,IAAIC,EAoCJ,SAASC,IACLpD,EAAAY,QAAKyC,cAAchB,UAAUiB,IAAI,aACjCnB,SAASC,KAAKC,UAAUkB,OAAO,Y,CApCnCvD,EAAAY,QAAKC,WAAWoB,iBAAiB,SAM1B,SAAqBhB,GAC5B,IAAKA,EAAEuC,OAAOnB,UAAUoB,SAAS,oBAC7B,OAEDzD,EAAAY,QAAKiC,WAAW/B,UAAY,GAC3BqC,EAASlC,EAAEuC,OAAOE,QAAQC,GAC1BZ,EAAQa,UAAYT,EAEpBnD,EAAAY,QAAKyC,cAAchB,UAAUkB,OAAO,aACpCpB,SAASC,KAAKC,UAAUiB,IAAI,aAE5BP,EAAQc,sBAAsBrC,MAAKC,IAC/Bc,EAAkBd,EAAK,G,IAjB/BzB,EAAAY,QAAKkD,SAAS7B,iBAAiB,SA6B/B,WACImB,G,IA7BJpD,EAAAY,QAAKmD,gBAAgB9B,iBAAiB,SAqC/B,WACDe,EAAkBgB,SAASb,E,IArCjCnD,EAAAY,QAAKqD,cAAchC,iBAAiB,SAyC7B,WACHe,EAAkBkB,cAAcf,E,IArBpCgB,OAAOlC,iBAAiB,SAAUhB,IAC1BA,EAAEuC,SAAWxD,EAAAY,QAAKyC,eAClBD,GAAY,I","sources":["src/js/main.js","src/js/main/searchMovies.js","src/js/main/renderMarkupSearch.js","src/js/main/changeColor.js","src/js/modal/modals.js","src/js/main/renderMarkupModal.js"],"sourcesContent":["import FetchFilmsApi from \"./fetch-service/fechFilmsApi\";\nimport onFormSubmit from './main/searchMovies';\nimport refs from './fetch-service/refs';\nimport renderMarkupSearch from \"./main/renderMarkupSearch\";\nimport getTrendingMoviesAndRender from \"./main/renderMainMarkup\";\nimport onClickChangeColor from './main/changeColor';\nimport { onClickFilm } from './modal/modals';\nimport { renderMarkupModal } from './main/renderMarkupModal';\nimport { onClickBtnNext } from \"./paginatin/pagination\";\n\n\n// createPagination() \n\n// import { onCreat, creatCards} from './main/renderMainMarkup';\n// onCreat()\n\n","import FetchFilmsApi from '../fetch-service/fechFilmsApi';\nimport refs from '../fetch-service/refs';\nimport renderMarkupSearch from './renderMarkupSearch';\n\nconst apiFetch = new FetchFilmsApi()\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n    e.preventDefault();\n    const formInputSearch = refs.formImput.value.trim()\n    apiFetch.serchValue = formInputSearch;\n\n    refs.galeryList.innerHTML = \"\";\n\n    apiFetch.getMouvieSearch().then(data => {\n        if (!data.results.length) {\n            return\n        }\n        renderMarkupSearch(data.results)\n\n   }).catch(err => console.log(err))\n\n}\n\nexport default onFormSubmit","import refs from \"../fetch-service/refs\";\n\n\nfunction renderMarkupSearch(arr) {\n    const markup = arr.map(({ poster_path, title, release_date }) => `\n     <li class=\"galery-list__item card-set-iteam\">\n          <img src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"${title}\" class=\"galery-list__img\" />\n          <h3 class=\"galery-list__title\">${title}</h3>\n          <p class=\"galery-list__desc\">\n            Science Fiction, Action, Adventure, Drama | ${splitDate(release_date)}\n          </p>\n        </li>\n    `).join('');\n\n    refs.galeryList.innerHTML = markup;\n    \n}\n\nfunction splitDate(value) {\n    const slit = value.split('').slice(0, 4).join('');\n\n    return slit;\n\n}\n\n\n\nexport default renderMarkupSearch\n\n","import refs from \"../fetch-service/refs\";\n\nrefs.changeColor.addEventListener('click', onClickChangeColor);\n\nexport function onClickChangeColor() {\n    const edit = document.body;\n    edit.classList.toggle('dark');\n}","import refs from \"../fetch-service/refs\";\nimport getTrendingMoviesAndRender from '../main/renderMainMarkup';\nimport FetchFilmsApi from '../fetch-service/fechFilmsApi';\nimport { renderMarkupModal } from '../main/renderMarkupModal';\nimport { LocalStorageServiceFilms } from \"../fetch-service/localStorageService\";\n\n\n\nconst fethApi = new FetchFilmsApi()\nconst localStorageFilms = new LocalStorageServiceFilms();\nlet filmId;\n\nrefs.galeryList.addEventListener('click', onClickFilm);\nrefs.closeBtn.addEventListener('click', onClickCloseBtn);\nrefs.modalBtnWatched.addEventListener('click', onClickBtnWatched);\nrefs.modalBtnQueue.addEventListener('click', onClickBtnQueue);\n\n\nexport function onClickFilm(e) {\nif (!e.target.classList.contains('galery-list__img')) {\n    return;\n}\n   refs.modalWrapp.innerHTML = \"\";\n    filmId = e.target.dataset.id;\n    fethApi.getIdFilm = filmId;\n    \n    refs.backdropModal.classList.remove('is-hidden');\n    document.body.classList.add('no-scroll');\n\n    fethApi.getDateilsMovieById().then(data => {\n        renderMarkupModal(data)\n    })\n     \n    \n}\n\nwindow.addEventListener('click', (e) => {\n    if (e.target === refs.backdropModal) {\n        closeModal()\n    }\n})\n\nfunction onClickCloseBtn() {\n    closeModal();\n}\n\nfunction closeModal() {\n    refs.backdropModal.classList.add('is-hidden');\n    document.body.classList.remove('no-scroll');\n}\n\nexport function onClickBtnWatched() {\n      localStorageFilms.setFilms(filmId);\n    \n}\n\nexport function onClickBtnQueue() {\n    localStorageFilms.setQueueMovie(filmId)\n}","import fetchFilmsApi from '../fetch-service/fechFilmsApi'\nimport refs from '../fetch-service/refs';\nimport { onClickFilm } from '../modal/modals'\n\n\nexport function renderMarkupModal({ poster_path, title, vote_average, vote_count, popularity, overview }) {\n  const markup = `\n    <div class=\"modal-content\">\n     <img\n      src=\"https://image.tmdb.org/t/p/w500/${poster_path}\"\n      alt=\"${title}\"\n      width=\"400\"\n      height=\"500\"\n      class=\"modal__img\"\n    />\n    <div class=\"modal-wrapp\">\n    <div class=\"modal-cover\">\n    <h2 class=\"modal__title\">${title}</h2>\n    <div class=\"modal-list-cover\">\n    <ul class=\"modal__list list\">\n      <li class=\"modal__list--item\">Vote / Votes</li>\n      <li class=\"modal__list--item\">Popularity</li>\n      <li class=\"modal__list--item\">Original Title</li>\n      <li class=\"modal__list--item\">Genre</li>\n    </ul>\n\n    <ul class=\"moda__option list\">\n      <li class=\"modal__option--item\">${vote_average.toFixed(1)} / ${vote_count}</li>\n      <li class=\"modal__option--item\">${popularity}</li>\n      <li class=\"modal__option--item\">${title}</li>\n      <li class=\"modal__option--item\">SCIENCE FICTION</li>\n    </ul>\n    </div>\n    </div>\n\n    <h3 class=\"modal__about\">ABOUT</h3>\n    <p class=\"modal__about--text\">\n      ${overview}\n    </p>\n    </div>\n    </div>\n    `; \n  \n  refs.modalWrapp.insertAdjacentHTML('beforeend', markup)\n}\n"],"names":["parcelRequire","$lhLDm","$96LRb","$6dbb9b7f8570c76d$export$2e2bcd8739ae039","arr","markup","map","poster_path","title","release_date","value","split","slice","join","default","galeryList","innerHTML","$c8102e3bbd0d8e2a$var$apiFetch","$c8102e3bbd0d8e2a$var$onFormSubmit","e","preventDefault","formInputSearch","formImput","trim","serchValue","getMouvieSearch","then","data","results","length","catch","err","console","log","form","addEventListener","changeColor","document","body","classList","toggle","$10d02b9aca9cf2c5$export$6fc2d66deaa88c4","vote_average","vote_count","popularity","overview","toFixed","modalWrapp","insertAdjacentHTML","$39fadbe32e254e3b$var$fethApi","$39fadbe32e254e3b$var$localStorageFilms","$g8ufL","LocalStorageServiceFilms","$39fadbe32e254e3b$var$filmId","$39fadbe32e254e3b$var$closeModal","backdropModal","add","remove","target","contains","dataset","id","getIdFilm","getDateilsMovieById","closeBtn","modalBtnWatched","setFilms","modalBtnQueue","setQueueMovie","window"],"version":3,"file":"index.acac7d3b.js.map"}